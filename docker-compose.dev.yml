version: '3.8'

services:
  # Backend API (Development)
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      # Application
      - DEBUG=true
      - USE_MOCK_DATA=false
      
      # SerpAPI (Google Flights)
      - SERPAPI_KEY=50077c30799321f18150852dfffb59190305d26ec3f081ea7310684e9e27eff9
      
      # Optional APIs
      - SUPABASE_URL=https://placeholder.supabase.co
      - SUPABASE_ANON_KEY=placeholder_key
      - REDIS_URL=redis://redis:6379
      - KIWI_API_KEY=
      - SKYSCANNER_API_KEY=
      - AMADEUS_CLIENT_ID=
      - AMADEUS_CLIENT_SECRET=
      - TRAVELPAYOUTS_TOKEN=
      
      # CORS
      - ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    volumes:
      - ./backend:/app
      - /app/venv  # Exclude venv from volume mount
    depends_on:
      - redis
    restart: unless-stopped
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Frontend Next.js App (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Exclude node_modules from volume mount
      - /app/.next        # Exclude .next from volume mount
    depends_on:
      - backend
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  redis_data: